const os = require('os')
const fs = require('fs')

async function buildNumber() {
    return new Promise((resolve, reject) => {
        resolve(Date.now())
    })
}

async function writeBuildInfo(file, info) {
    return new Promise((resolve, reject) => {
        fs.open(file, 'w', 0o755, (err, fd) => {
            if (err) {
                return reject(err)
            }

            return resolve(fd)
        })
    }).then(fd => new Promise((resolve, reject) => {

        txt = "// This file is generated by the npm run buildinfo script.\n"
        txt += "module.exports = "
        txt += JSON.stringify(info, 2, 2)

        fs.write(fd, txt, err => {
            if (err) {
                return reject(err)
            }

            return resolve(fd)
        })
    })).then(fd => new Promise((resolve, reject) => {
        fs.close(fd, err => {
            if (err) {
                return reject(err)
            }

            return resolve(fd)
        })
    }))
}

async function readLicense() {
    return new Promise((resolve, reject) => {
        fs.readFile("LICENSE", {encoding: 'utf-8'}, (err, txt) => {
            if (err) {
                return reject(err)
            }

            return resolve(txt)
        })
    })
}

new Promise((resolve, reject) => {
    fs.readFile("./package.json", (err, data) => {
        if (err) {
            return reject(err)
        }

        return resolve(JSON.parse(data))
    })
}).then(pkg => {
    // Build initial build info.
    return {
        name: pkg.name,
        version: pkg.version,
    }
}).then(info => 
    // Compute and add bulid number.
    buildNumber().then(bn => {
        info.build = bn
        return info
    })
).then(info => readLicense().then(lic => { info.license = lic; return info; })
).then(info => writeBuildInfo('./src/build_info.js', info))
    